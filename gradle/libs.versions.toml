[versions]
agp = "8.2.2"
activity-compose = "1.8.2"
core-ktx = "1.12.0"
compose-bom = "2023.08.00"
devtools-ksp = "1.8.10-1.0.9"
kotlin = "1.9.0"
lifecycle-runtime-ktx = "2.7.0"
graph-assertion = "2.5.0"
constraintlayout-compose = "1.0.1"
coroutines = "1.7.3"
coil-compose = "2.2.2"
datastore = "1.0.0"
flowlayout = "0.17.0"
glide-compose = "1.0.0-beta01"
gson = "2.10"
hilt-android = "2.44"
hilt-androidx = "1.1.0"
javax-inject = "1"
kotlin-reflect = "1.8.21"
lifecycle-viewmodel = "2.6.2"
material-icons = "1.5.4"
navigation-compose = "2.7.4"
okhttp = "4.11.0"
paging = "3.2.1"
retrofit = "2.9.0"
room = "2.6.0"


# Default Android Test
androidx-test-ext-junit = "1.1.5"
junit = "4.13.2"
espresso-core = "3.5.1"

core-testing = "2.2.0"
hilt-android-testing = "2.38.1"
kotlin-test = "1.9.10"

mockk = "1.12.3"
mockwebserver = "4.9.0"
mockk-android = "1.11.0"
truth = "1.5.0"
turbine = "0.8.0"

[libraries]
# Default
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
lifecycle-runtime-ktx = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-runtime-ktx" }
material3 = { group = "androidx.compose.material3", name = "material3" }
ui = { group = "androidx.compose.ui", name = "ui" }
ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }

constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayout-compose" }
coil = { module = "io.coil-kt:coil-compose", version.ref = "coil-compose" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "flowlayout" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
gsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
glide = { module = "com.github.bumptech.glide:compose", version.ref = "glide-compose" }
hiltAndroid = { module = "com.google.dagger:hilt-android", version.ref = "hilt-android" }
androidxHiltCompiler = { module = "androidx.hilt:hilt-compiler", version.ref = "hilt-androidx" }
hiltCompiler = { module = "com.google.dagger:hilt-compiler", version.ref = "hilt-android" }
hiltNavigation = { module = "androidx.hilt:hilt-navigation-compose", version.ref = "hilt-androidx" }
javaxInject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-reflect" }
kotlinxCoroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
lifecycleRuntime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle-viewmodel" }
lifecycleViewmodelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel" }
lifecycleViewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle-viewmodel" }
loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
materialIcons = { module = "androidx.compose.material:material-icons-extended", version.ref = "material-icons" }
navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
paging = { module = "androidx.paging:paging-compose", version.ref = "paging" }
pagingCommon = { module = "androidx.paging:paging-common", version.ref = "paging" }
pagingRuntime = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
rxjavaAdapter = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }
room = { module = "androidx.room:room-ktx", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }

# Default Test
ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
ui-test-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
androidx-test-ext-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-ext-junit" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }

coroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test-jvm", version.ref = "coroutines" }
coreTesting = { module = "androidx.arch.core:core-testing", version.ref = "core-testing" }
hiltAndroidTesting = { module = "com.google.dagger:hilt-android-testing", version.ref = "hilt-android-testing" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin-test" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk-android" }
truth = { module = "androidx.test.ext:truth", version.ref = "truth" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinParcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
hiltAndroidPlugin = { id = "com.google.dagger.hilt.android", version.ref = 'hilt-android' }
devtoolsKsp = { id = "com.google.devtools.ksp", version.ref = 'devtools-ksp' }
graphAssertion = { id = "com.jraska.module.graph.assertion", version.ref = 'graph-assertion' }

